PRISM 2.1, (C) Sato Lab, Tokyo Institute of Technology, September, 2012
B-Prolog Version 7.8b1, All rights reserved, (C) Afany Software 1994-2012.

This edition of B-Prolog is for evaluation, learning, and non-profit
research purposes only, and a license is needed for any other uses.
Please visit http://www.probp.com/license.htm for the detail.


Type 'prism_help' for usage.
** Warning: singleton variables (rnascfg.psm, 48-56): A
loading::rnascfg.psm.out

model([g,g,u,a,u,g,g,c,c,g])
   <= scfg(free,[g,g,u,a,u,g,g,c,c,g]- [])
scfg(free,[g,g,u,a,u,g,g,c,c,g]- [])
   <= projection([free,free],[g,g,u,a,u,g,g,c,c,g]- []) & msw(transition(free),[free,free])
projection([free,free],[g,g,u,a,u,g,g,c,c,g]- [])
   <= scfg(free,[g,g,u,a,u,g,g,c,c,g]-[g]) & projection([free],[g]- [])
scfg(free,[g,g,u,a,u,g,g,c,c,g]-[g])
   <= projection([stem],[g,g,u,a,u,g,g,c,c,g]-[g]) & msw(transition(free),[stem])
projection([stem],[g,g,u,a,u,g,g,c,c,g]-[g])
   <= scfg(stem,[g,g,u,a,u,g,g,c,c,g]-[g]) & projection([],[g]-[g])
scfg(stem,[g,g,u,a,u,g,g,c,c,g]-[g])
   <= projection([gl,stem,cr],[g,g,u,a,u,g,g,c,c,g]-[g]) & msw(transition(stem),[gl,stem,cr])
projection([gl,stem,cr],[g,g,u,a,u,g,g,c,c,g]-[g])
   <= scfg(gl,[g,g,u,a,u,g,g,c,c,g]-[g,u,a,u,g,g,c,c,g]) & projection([stem,cr],[g,u,a,u,g,g,c,c,g]-[g])
scfg(gl,[g,g,u,a,u,g,g,c,c,g]-[g,u,a,u,g,g,c,c,g])
projection([stem,cr],[g,u,a,u,g,g,c,c,g]-[g])
   <= scfg(stem,[g,u,a,u,g,g,c,c,g]-[c,g]) & projection([cr],[c,g]-[g])
scfg(stem,[g,u,a,u,g,g,c,c,g]-[c,g])
   <= projection([gl,stem,cr],[g,u,a,u,g,g,c,c,g]-[c,g]) & msw(transition(stem),[gl,stem,cr])
projection([gl,stem,cr],[g,u,a,u,g,g,c,c,g]-[c,g])
   <= scfg(gl,[g,u,a,u,g,g,c,c,g]-[u,a,u,g,g,c,c,g]) & projection([stem,cr],[u,a,u,g,g,c,c,g]-[c,g])
scfg(gl,[g,u,a,u,g,g,c,c,g]-[u,a,u,g,g,c,c,g])
projection([stem,cr],[u,a,u,g,g,c,c,g]-[c,g])
   <= scfg(stem,[u,a,u,g,g,c,c,g]-[c,c,g]) & projection([cr],[c,c,g]-[c,g])
scfg(stem,[u,a,u,g,g,c,c,g]-[c,c,g])
   <= projection([loop],[u,a,u,g,g,c,c,g]-[c,c,g]) & msw(transition(stem),[loop])
projection([loop],[u,a,u,g,g,c,c,g]-[c,c,g])
   <= scfg(loop,[u,a,u,g,g,c,c,g]-[c,c,g]) & projection([],[c,c,g]-[c,c,g])
scfg(loop,[u,a,u,g,g,c,c,g]-[c,c,g])
   <= projection([u,loop],[u,a,u,g,g,c,c,g]-[c,c,g]) & msw(transition(loop),[u,loop])
projection([u,loop],[u,a,u,g,g,c,c,g]-[c,c,g])
   <= scfg(u,[u,a,u,g,g,c,c,g]-[a,u,g,g,c,c,g]) & projection([loop],[a,u,g,g,c,c,g]-[c,c,g])
scfg(u,[u,a,u,g,g,c,c,g]-[a,u,g,g,c,c,g])
projection([loop],[a,u,g,g,c,c,g]-[c,c,g])
   <= scfg(loop,[a,u,g,g,c,c,g]-[c,c,g]) & projection([],[c,c,g]-[c,c,g])
scfg(loop,[a,u,g,g,c,c,g]-[c,c,g])
   <= projection([a,loop],[a,u,g,g,c,c,g]-[c,c,g]) & msw(transition(loop),[a,loop])
projection([a,loop],[a,u,g,g,c,c,g]-[c,c,g])
   <= scfg(a,[a,u,g,g,c,c,g]-[u,g,g,c,c,g]) & projection([loop],[u,g,g,c,c,g]-[c,c,g])
scfg(a,[a,u,g,g,c,c,g]-[u,g,g,c,c,g])
projection([loop],[u,g,g,c,c,g]-[c,c,g])
   <= scfg(loop,[u,g,g,c,c,g]-[c,c,g]) & projection([],[c,c,g]-[c,c,g])
scfg(loop,[u,g,g,c,c,g]-[c,c,g])
   <= projection([u,loop],[u,g,g,c,c,g]-[c,c,g]) & msw(transition(loop),[u,loop])
projection([u,loop],[u,g,g,c,c,g]-[c,c,g])
   <= scfg(u,[u,g,g,c,c,g]-[g,g,c,c,g]) & projection([loop],[g,g,c,c,g]-[c,c,g])
scfg(u,[u,g,g,c,c,g]-[g,g,c,c,g])
projection([loop],[g,g,c,c,g]-[c,c,g])
   <= scfg(loop,[g,g,c,c,g]-[c,c,g]) & projection([],[c,c,g]-[c,c,g])
scfg(loop,[g,g,c,c,g]-[c,c,g])
   <= projection([g,loop],[g,g,c,c,g]-[c,c,g]) & msw(transition(loop),[g,loop])
projection([g,loop],[g,g,c,c,g]-[c,c,g])
   <= scfg(g,[g,g,c,c,g]-[g,c,c,g]) & projection([loop],[g,c,c,g]-[c,c,g])
scfg(g,[g,g,c,c,g]-[g,c,c,g])
projection([loop],[g,c,c,g]-[c,c,g])
   <= scfg(loop,[g,c,c,g]-[c,c,g]) & projection([],[c,c,g]-[c,c,g])
scfg(loop,[g,c,c,g]-[c,c,g])
   <= projection([g],[g,c,c,g]-[c,c,g]) & msw(transition(loop),[g])
projection([g],[g,c,c,g]-[c,c,g])
   <= scfg(g,[g,c,c,g]-[c,c,g]) & projection([],[c,c,g]-[c,c,g])
scfg(g,[g,c,c,g]-[c,c,g])
projection([],[c,c,g]-[c,c,g])
projection([],[c,c,g]-[c,c,g])
projection([],[c,c,g]-[c,c,g])
projection([],[c,c,g]-[c,c,g])
projection([],[c,c,g]-[c,c,g])
projection([],[c,c,g]-[c,c,g])
projection([cr],[c,c,g]-[c,g])
   <= scfg(cr,[c,c,g]-[c,g]) & projection([],[c,g]-[c,g])
scfg(cr,[c,c,g]-[c,g])
projection([],[c,g]-[c,g])
projection([cr],[c,g]-[g])
   <= scfg(cr,[c,g]-[g]) & projection([],[g]-[g])
scfg(cr,[c,g]-[g])
projection([],[g]-[g])
projection([],[g]-[g])
projection([free],[g]- [])
   <= scfg(free,[g]- []) & projection([],[] - [])
scfg(free,[g]- [])
   <= projection([g],[g]- []) & msw(transition(free),[g])
projection([g],[g]- [])
   <= scfg(g,[g]- []) & projection([],[] - [])
scfg(g,[g]- [])
projection([],[] - [])
projection([],[] - [])

Viterbi_P = 0.000000001283457
