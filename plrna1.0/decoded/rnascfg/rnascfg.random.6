PRISM 2.1, (C) Sato Lab, Tokyo Institute of Technology, September, 2012
B-Prolog Version 7.8b1, All rights reserved, (C) Afany Software 1994-2012.

This edition of B-Prolog is for evaluation, learning, and non-profit
research purposes only, and a license is needed for any other uses.
Please visit http://www.probp.com/license.htm for the detail.


Type 'prism_help' for usage.
** Warning: singleton variables (rnascfg.psm, 48-56): A
loading::rnascfg.psm.out

model([g,c,g,c,u,g,c,c,a,g])
   <= scfg(free,[g,c,g,c,u,g,c,c,a,g]- [])
scfg(free,[g,c,g,c,u,g,c,c,a,g]- [])
   <= projection([g,free],[g,c,g,c,u,g,c,c,a,g]- []) & msw(transition(free),[g,free])
projection([g,free],[g,c,g,c,u,g,c,c,a,g]- [])
   <= scfg(g,[g,c,g,c,u,g,c,c,a,g]-[c,g,c,u,g,c,c,a,g]) & projection([free],[c,g,c,u,g,c,c,a,g]- [])
scfg(g,[g,c,g,c,u,g,c,c,a,g]-[c,g,c,u,g,c,c,a,g])
projection([free],[c,g,c,u,g,c,c,a,g]- [])
   <= scfg(free,[c,g,c,u,g,c,c,a,g]- []) & projection([],[] - [])
scfg(free,[c,g,c,u,g,c,c,a,g]- [])
   <= projection([c,free],[c,g,c,u,g,c,c,a,g]- []) & msw(transition(free),[c,free])
projection([c,free],[c,g,c,u,g,c,c,a,g]- [])
   <= scfg(c,[c,g,c,u,g,c,c,a,g]-[g,c,u,g,c,c,a,g]) & projection([free],[g,c,u,g,c,c,a,g]- [])
scfg(c,[c,g,c,u,g,c,c,a,g]-[g,c,u,g,c,c,a,g])
projection([free],[g,c,u,g,c,c,a,g]- [])
   <= scfg(free,[g,c,u,g,c,c,a,g]- []) & projection([],[] - [])
scfg(free,[g,c,u,g,c,c,a,g]- [])
   <= projection([g,free],[g,c,u,g,c,c,a,g]- []) & msw(transition(free),[g,free])
projection([g,free],[g,c,u,g,c,c,a,g]- [])
   <= scfg(g,[g,c,u,g,c,c,a,g]-[c,u,g,c,c,a,g]) & projection([free],[c,u,g,c,c,a,g]- [])
scfg(g,[g,c,u,g,c,c,a,g]-[c,u,g,c,c,a,g])
projection([free],[c,u,g,c,c,a,g]- [])
   <= scfg(free,[c,u,g,c,c,a,g]- []) & projection([],[] - [])
scfg(free,[c,u,g,c,c,a,g]- [])
   <= projection([stem],[c,u,g,c,c,a,g]- []) & msw(transition(free),[stem])
projection([stem],[c,u,g,c,c,a,g]- [])
   <= scfg(stem,[c,u,g,c,c,a,g]- []) & projection([],[] - [])
scfg(stem,[c,u,g,c,c,a,g]- [])
   <= projection([cl,stem,gr],[c,u,g,c,c,a,g]- []) & msw(transition(stem),[cl,stem,gr])
projection([cl,stem,gr],[c,u,g,c,c,a,g]- [])
   <= scfg(cl,[c,u,g,c,c,a,g]-[u,g,c,c,a,g]) & projection([stem,gr],[u,g,c,c,a,g]- [])
scfg(cl,[c,u,g,c,c,a,g]-[u,g,c,c,a,g])
projection([stem,gr],[u,g,c,c,a,g]- [])
   <= scfg(stem,[u,g,c,c,a,g]-[g]) & projection([gr],[g]- [])
scfg(stem,[u,g,c,c,a,g]-[g])
   <= projection([ul,stem,ar],[u,g,c,c,a,g]-[g]) & msw(transition(stem),[ul,stem,ar])
projection([ul,stem,ar],[u,g,c,c,a,g]-[g])
   <= scfg(ul,[u,g,c,c,a,g]-[g,c,c,a,g]) & projection([stem,ar],[g,c,c,a,g]-[g])
scfg(ul,[u,g,c,c,a,g]-[g,c,c,a,g])
projection([stem,ar],[g,c,c,a,g]-[g])
   <= scfg(stem,[g,c,c,a,g]-[a,g]) & projection([ar],[a,g]-[g])
scfg(stem,[g,c,c,a,g]-[a,g])
   <= projection([gl,stem,cr],[g,c,c,a,g]-[a,g]) & msw(transition(stem),[gl,stem,cr])
projection([gl,stem,cr],[g,c,c,a,g]-[a,g])
   <= scfg(gl,[g,c,c,a,g]-[c,c,a,g]) & projection([stem,cr],[c,c,a,g]-[a,g])
scfg(gl,[g,c,c,a,g]-[c,c,a,g])
projection([stem,cr],[c,c,a,g]-[a,g])
   <= scfg(stem,[c,c,a,g]-[c,a,g]) & projection([cr],[c,a,g]-[a,g])
scfg(stem,[c,c,a,g]-[c,a,g])
   <= projection([loop],[c,c,a,g]-[c,a,g]) & msw(transition(stem),[loop])
projection([loop],[c,c,a,g]-[c,a,g])
   <= scfg(loop,[c,c,a,g]-[c,a,g]) & projection([],[c,a,g]-[c,a,g])
scfg(loop,[c,c,a,g]-[c,a,g])
   <= projection([c],[c,c,a,g]-[c,a,g]) & msw(transition(loop),[c])
projection([c],[c,c,a,g]-[c,a,g])
   <= scfg(c,[c,c,a,g]-[c,a,g]) & projection([],[c,a,g]-[c,a,g])
scfg(c,[c,c,a,g]-[c,a,g])
projection([],[c,a,g]-[c,a,g])
projection([],[c,a,g]-[c,a,g])
projection([cr],[c,a,g]-[a,g])
   <= scfg(cr,[c,a,g]-[a,g]) & projection([],[a,g]-[a,g])
scfg(cr,[c,a,g]-[a,g])
projection([],[a,g]-[a,g])
projection([ar],[a,g]-[g])
   <= scfg(ar,[a,g]-[g]) & projection([],[g]-[g])
scfg(ar,[a,g]-[g])
projection([],[g]-[g])
projection([gr],[g]- [])
   <= scfg(gr,[g]- []) & projection([],[] - [])
scfg(gr,[g]- [])
projection([],[] - [])
projection([],[] - [])
projection([],[] - [])
projection([],[] - [])
projection([],[] - [])

Viterbi_P = 0.000000007440901
