PRISM 2.1, (C) Sato Lab, Tokyo Institute of Technology, September, 2012
B-Prolog Version 7.8b1, All rights reserved, (C) Afany Software 1994-2012.

This edition of B-Prolog is for evaluation, learning, and non-profit
research purposes only, and a license is needed for any other uses.
Please visit http://www.probp.com/license.htm for the detail.


Type 'prism_help' for usage.
** Warning: singleton variables (rnascfg.psm, 48-56): A
loading::rnascfg.psm.out

model([c,g,u,g,a,u,g,c,g,u])
   <= scfg(free,[c,g,u,g,a,u,g,c,g,u]- [])
scfg(free,[c,g,u,g,a,u,g,c,g,u]- [])
   <= projection([free,free],[c,g,u,g,a,u,g,c,g,u]- []) & msw(transition(free),[free,free])
projection([free,free],[c,g,u,g,a,u,g,c,g,u]- [])
   <= scfg(free,[c,g,u,g,a,u,g,c,g,u]-[u]) & projection([free],[u]- [])
scfg(free,[c,g,u,g,a,u,g,c,g,u]-[u])
   <= projection([stem],[c,g,u,g,a,u,g,c,g,u]-[u]) & msw(transition(free),[stem])
projection([stem],[c,g,u,g,a,u,g,c,g,u]-[u])
   <= scfg(stem,[c,g,u,g,a,u,g,c,g,u]-[u]) & projection([],[u]-[u])
scfg(stem,[c,g,u,g,a,u,g,c,g,u]-[u])
   <= projection([cl,stem,gr],[c,g,u,g,a,u,g,c,g,u]-[u]) & msw(transition(stem),[cl,stem,gr])
projection([cl,stem,gr],[c,g,u,g,a,u,g,c,g,u]-[u])
   <= scfg(cl,[c,g,u,g,a,u,g,c,g,u]-[g,u,g,a,u,g,c,g,u]) & projection([stem,gr],[g,u,g,a,u,g,c,g,u]-[u])
scfg(cl,[c,g,u,g,a,u,g,c,g,u]-[g,u,g,a,u,g,c,g,u])
projection([stem,gr],[g,u,g,a,u,g,c,g,u]-[u])
   <= scfg(stem,[g,u,g,a,u,g,c,g,u]-[g,u]) & projection([gr],[g,u]-[u])
scfg(stem,[g,u,g,a,u,g,c,g,u]-[g,u])
   <= projection([gl,stem,cr],[g,u,g,a,u,g,c,g,u]-[g,u]) & msw(transition(stem),[gl,stem,cr])
projection([gl,stem,cr],[g,u,g,a,u,g,c,g,u]-[g,u])
   <= scfg(gl,[g,u,g,a,u,g,c,g,u]-[u,g,a,u,g,c,g,u]) & projection([stem,cr],[u,g,a,u,g,c,g,u]-[g,u])
scfg(gl,[g,u,g,a,u,g,c,g,u]-[u,g,a,u,g,c,g,u])
projection([stem,cr],[u,g,a,u,g,c,g,u]-[g,u])
   <= scfg(stem,[u,g,a,u,g,c,g,u]-[c,g,u]) & projection([cr],[c,g,u]-[g,u])
scfg(stem,[u,g,a,u,g,c,g,u]-[c,g,u])
   <= projection([ul,stem,gr],[u,g,a,u,g,c,g,u]-[c,g,u]) & msw(transition(stem),[ul,stem,gr])
projection([ul,stem,gr],[u,g,a,u,g,c,g,u]-[c,g,u])
   <= scfg(ul,[u,g,a,u,g,c,g,u]-[g,a,u,g,c,g,u]) & projection([stem,gr],[g,a,u,g,c,g,u]-[c,g,u])
scfg(ul,[u,g,a,u,g,c,g,u]-[g,a,u,g,c,g,u])
projection([stem,gr],[g,a,u,g,c,g,u]-[c,g,u])
   <= scfg(stem,[g,a,u,g,c,g,u]-[g,c,g,u]) & projection([gr],[g,c,g,u]-[c,g,u])
scfg(stem,[g,a,u,g,c,g,u]-[g,c,g,u])
   <= projection([gl,stem,ur],[g,a,u,g,c,g,u]-[g,c,g,u]) & msw(transition(stem),[gl,stem,ur])
projection([gl,stem,ur],[g,a,u,g,c,g,u]-[g,c,g,u])
   <= scfg(gl,[g,a,u,g,c,g,u]-[a,u,g,c,g,u]) & projection([stem,ur],[a,u,g,c,g,u]-[g,c,g,u])
scfg(gl,[g,a,u,g,c,g,u]-[a,u,g,c,g,u])
projection([stem,ur],[a,u,g,c,g,u]-[g,c,g,u])
   <= scfg(stem,[a,u,g,c,g,u]-[u,g,c,g,u]) & projection([ur],[u,g,c,g,u]-[g,c,g,u])
scfg(stem,[a,u,g,c,g,u]-[u,g,c,g,u])
   <= projection([loop],[a,u,g,c,g,u]-[u,g,c,g,u]) & msw(transition(stem),[loop])
projection([loop],[a,u,g,c,g,u]-[u,g,c,g,u])
   <= scfg(loop,[a,u,g,c,g,u]-[u,g,c,g,u]) & projection([],[u,g,c,g,u]-[u,g,c,g,u])
scfg(loop,[a,u,g,c,g,u]-[u,g,c,g,u])
   <= projection([a],[a,u,g,c,g,u]-[u,g,c,g,u]) & msw(transition(loop),[a])
projection([a],[a,u,g,c,g,u]-[u,g,c,g,u])
   <= scfg(a,[a,u,g,c,g,u]-[u,g,c,g,u]) & projection([],[u,g,c,g,u]-[u,g,c,g,u])
scfg(a,[a,u,g,c,g,u]-[u,g,c,g,u])
projection([],[u,g,c,g,u]-[u,g,c,g,u])
projection([],[u,g,c,g,u]-[u,g,c,g,u])
projection([ur],[u,g,c,g,u]-[g,c,g,u])
   <= scfg(ur,[u,g,c,g,u]-[g,c,g,u]) & projection([],[g,c,g,u]-[g,c,g,u])
scfg(ur,[u,g,c,g,u]-[g,c,g,u])
projection([],[g,c,g,u]-[g,c,g,u])
projection([gr],[g,c,g,u]-[c,g,u])
   <= scfg(gr,[g,c,g,u]-[c,g,u]) & projection([],[c,g,u]-[c,g,u])
scfg(gr,[g,c,g,u]-[c,g,u])
projection([],[c,g,u]-[c,g,u])
projection([cr],[c,g,u]-[g,u])
   <= scfg(cr,[c,g,u]-[g,u]) & projection([],[g,u]-[g,u])
scfg(cr,[c,g,u]-[g,u])
projection([],[g,u]-[g,u])
projection([gr],[g,u]-[u])
   <= scfg(gr,[g,u]-[u]) & projection([],[u]-[u])
scfg(gr,[g,u]-[u])
projection([],[u]-[u])
projection([],[u]-[u])
projection([free],[u]- [])
   <= scfg(free,[u]- []) & projection([],[] - [])
scfg(free,[u]- [])
   <= projection([u],[u]- []) & msw(transition(free),[u])
projection([u],[u]- [])
   <= scfg(u,[u]- []) & projection([],[] - [])
scfg(u,[u]- [])
projection([],[] - [])
projection([],[] - [])

Viterbi_P = 0.000000001681358
