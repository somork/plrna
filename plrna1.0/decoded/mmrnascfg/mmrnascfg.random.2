PRISM 2.1, (C) Sato Lab, Tokyo Institute of Technology, September, 2012
B-Prolog Version 7.8b1, All rights reserved, (C) Afany Software 1994-2012.

This edition of B-Prolog is for evaluation, learning, and non-profit
research purposes only, and a license is needed for any other uses.
Please visit http://www.probp.com/license.htm for the detail.


Type 'prism_help' for usage.
** Warning: singleton variables (mmrnascfg.psm, 47-55): A
loading::mmrnascfg.psm.out

model([c,g,g,c,a,c,a,c,g,a])
   <= scfg(b,free,[c,g,g,c,a,c,a,c,g,a]- [])
scfg(b,free,[c,g,g,c,a,c,a,c,g,a]- [])
   <= projection(free,[stem],[c,g,g,c,a,c,a,c,g,a]- []) & msw(transition(free,b),[stem])
projection(free,[stem],[c,g,g,c,a,c,a,c,g,a]- [])
   <= scfg(free,stem,[c,g,g,c,a,c,a,c,g,a]- []) & projection(free,[],[] - [])
scfg(free,stem,[c,g,g,c,a,c,a,c,g,a]- [])
   <= projection(stem,[loop],[c,g,g,c,a,c,a,c,g,a]- []) & msw(transition(stem,free),[loop])
projection(stem,[loop],[c,g,g,c,a,c,a,c,g,a]- [])
   <= scfg(stem,loop,[c,g,g,c,a,c,a,c,g,a]- []) & projection(stem,[],[] - [])
scfg(stem,loop,[c,g,g,c,a,c,a,c,g,a]- [])
   <= projection(loop,[c,loop],[c,g,g,c,a,c,a,c,g,a]- []) & msw(transition(loop,stem),[c,loop])
projection(loop,[c,loop],[c,g,g,c,a,c,a,c,g,a]- [])
   <= scfg(loop,c,[c,g,g,c,a,c,a,c,g,a]-[g,g,c,a,c,a,c,g,a]) & projection(loop,[loop],[g,g,c,a,c,a,c,g,a]- [])
scfg(loop,c,[c,g,g,c,a,c,a,c,g,a]-[g,g,c,a,c,a,c,g,a])
projection(loop,[loop],[g,g,c,a,c,a,c,g,a]- [])
   <= scfg(loop,loop,[g,g,c,a,c,a,c,g,a]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[g,g,c,a,c,a,c,g,a]- [])
   <= projection(loop,[g,loop],[g,g,c,a,c,a,c,g,a]- []) & msw(transition(loop,loop),[g,loop])
projection(loop,[g,loop],[g,g,c,a,c,a,c,g,a]- [])
   <= scfg(loop,g,[g,g,c,a,c,a,c,g,a]-[g,c,a,c,a,c,g,a]) & projection(loop,[loop],[g,c,a,c,a,c,g,a]- [])
scfg(loop,g,[g,g,c,a,c,a,c,g,a]-[g,c,a,c,a,c,g,a])
projection(loop,[loop],[g,c,a,c,a,c,g,a]- [])
   <= scfg(loop,loop,[g,c,a,c,a,c,g,a]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[g,c,a,c,a,c,g,a]- [])
   <= projection(loop,[g,loop],[g,c,a,c,a,c,g,a]- []) & msw(transition(loop,loop),[g,loop])
projection(loop,[g,loop],[g,c,a,c,a,c,g,a]- [])
   <= scfg(loop,g,[g,c,a,c,a,c,g,a]-[c,a,c,a,c,g,a]) & projection(loop,[loop],[c,a,c,a,c,g,a]- [])
scfg(loop,g,[g,c,a,c,a,c,g,a]-[c,a,c,a,c,g,a])
projection(loop,[loop],[c,a,c,a,c,g,a]- [])
   <= scfg(loop,loop,[c,a,c,a,c,g,a]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[c,a,c,a,c,g,a]- [])
   <= projection(loop,[c,loop],[c,a,c,a,c,g,a]- []) & msw(transition(loop,loop),[c,loop])
projection(loop,[c,loop],[c,a,c,a,c,g,a]- [])
   <= scfg(loop,c,[c,a,c,a,c,g,a]-[a,c,a,c,g,a]) & projection(loop,[loop],[a,c,a,c,g,a]- [])
scfg(loop,c,[c,a,c,a,c,g,a]-[a,c,a,c,g,a])
projection(loop,[loop],[a,c,a,c,g,a]- [])
   <= scfg(loop,loop,[a,c,a,c,g,a]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[a,c,a,c,g,a]- [])
   <= projection(loop,[a,loop],[a,c,a,c,g,a]- []) & msw(transition(loop,loop),[a,loop])
projection(loop,[a,loop],[a,c,a,c,g,a]- [])
   <= scfg(loop,a,[a,c,a,c,g,a]-[c,a,c,g,a]) & projection(loop,[loop],[c,a,c,g,a]- [])
scfg(loop,a,[a,c,a,c,g,a]-[c,a,c,g,a])
projection(loop,[loop],[c,a,c,g,a]- [])
   <= scfg(loop,loop,[c,a,c,g,a]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[c,a,c,g,a]- [])
   <= projection(loop,[c,loop],[c,a,c,g,a]- []) & msw(transition(loop,loop),[c,loop])
projection(loop,[c,loop],[c,a,c,g,a]- [])
   <= scfg(loop,c,[c,a,c,g,a]-[a,c,g,a]) & projection(loop,[loop],[a,c,g,a]- [])
scfg(loop,c,[c,a,c,g,a]-[a,c,g,a])
projection(loop,[loop],[a,c,g,a]- [])
   <= scfg(loop,loop,[a,c,g,a]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[a,c,g,a]- [])
   <= projection(loop,[a,loop],[a,c,g,a]- []) & msw(transition(loop,loop),[a,loop])
projection(loop,[a,loop],[a,c,g,a]- [])
   <= scfg(loop,a,[a,c,g,a]-[c,g,a]) & projection(loop,[loop],[c,g,a]- [])
scfg(loop,a,[a,c,g,a]-[c,g,a])
projection(loop,[loop],[c,g,a]- [])
   <= scfg(loop,loop,[c,g,a]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[c,g,a]- [])
   <= projection(loop,[c,loop],[c,g,a]- []) & msw(transition(loop,loop),[c,loop])
projection(loop,[c,loop],[c,g,a]- [])
   <= scfg(loop,c,[c,g,a]-[g,a]) & projection(loop,[loop],[g,a]- [])
scfg(loop,c,[c,g,a]-[g,a])
projection(loop,[loop],[g,a]- [])
   <= scfg(loop,loop,[g,a]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[g,a]- [])
   <= projection(loop,[g,loop],[g,a]- []) & msw(transition(loop,loop),[g,loop])
projection(loop,[g,loop],[g,a]- [])
   <= scfg(loop,g,[g,a]-[a]) & projection(loop,[loop],[a]- [])
scfg(loop,g,[g,a]-[a])
projection(loop,[loop],[a]- [])
   <= scfg(loop,loop,[a]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[a]- [])
   <= projection(loop,[a],[a]- []) & msw(transition(loop,loop),[a])
projection(loop,[a],[a]- [])
   <= scfg(loop,a,[a]- []) & projection(loop,[],[] - [])
scfg(loop,a,[a]- [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(stem,[],[] - [])
projection(free,[],[] - [])

Viterbi_P = 0.000000000534415
