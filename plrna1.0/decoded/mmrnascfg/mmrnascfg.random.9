PRISM 2.1, (C) Sato Lab, Tokyo Institute of Technology, September, 2012
B-Prolog Version 7.8b1, All rights reserved, (C) Afany Software 1994-2012.

This edition of B-Prolog is for evaluation, learning, and non-profit
research purposes only, and a license is needed for any other uses.
Please visit http://www.probp.com/license.htm for the detail.


Type 'prism_help' for usage.
** Warning: singleton variables (mmrnascfg.psm, 47-55): A
loading::mmrnascfg.psm.out

model([a,u,a,u,a,c,a,a,a,c])
   <= scfg(b,free,[a,u,a,u,a,c,a,a,a,c]- [])
scfg(b,free,[a,u,a,u,a,c,a,a,a,c]- [])
   <= projection(free,[stem],[a,u,a,u,a,c,a,a,a,c]- []) & msw(transition(free,b),[stem])
projection(free,[stem],[a,u,a,u,a,c,a,a,a,c]- [])
   <= scfg(free,stem,[a,u,a,u,a,c,a,a,a,c]- []) & projection(free,[],[] - [])
scfg(free,stem,[a,u,a,u,a,c,a,a,a,c]- [])
   <= projection(stem,[loop],[a,u,a,u,a,c,a,a,a,c]- []) & msw(transition(stem,free),[loop])
projection(stem,[loop],[a,u,a,u,a,c,a,a,a,c]- [])
   <= scfg(stem,loop,[a,u,a,u,a,c,a,a,a,c]- []) & projection(stem,[],[] - [])
scfg(stem,loop,[a,u,a,u,a,c,a,a,a,c]- [])
   <= projection(loop,[a,loop],[a,u,a,u,a,c,a,a,a,c]- []) & msw(transition(loop,stem),[a,loop])
projection(loop,[a,loop],[a,u,a,u,a,c,a,a,a,c]- [])
   <= scfg(loop,a,[a,u,a,u,a,c,a,a,a,c]-[u,a,u,a,c,a,a,a,c]) & projection(loop,[loop],[u,a,u,a,c,a,a,a,c]- [])
scfg(loop,a,[a,u,a,u,a,c,a,a,a,c]-[u,a,u,a,c,a,a,a,c])
projection(loop,[loop],[u,a,u,a,c,a,a,a,c]- [])
   <= scfg(loop,loop,[u,a,u,a,c,a,a,a,c]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[u,a,u,a,c,a,a,a,c]- [])
   <= projection(loop,[u,loop],[u,a,u,a,c,a,a,a,c]- []) & msw(transition(loop,loop),[u,loop])
projection(loop,[u,loop],[u,a,u,a,c,a,a,a,c]- [])
   <= scfg(loop,u,[u,a,u,a,c,a,a,a,c]-[a,u,a,c,a,a,a,c]) & projection(loop,[loop],[a,u,a,c,a,a,a,c]- [])
scfg(loop,u,[u,a,u,a,c,a,a,a,c]-[a,u,a,c,a,a,a,c])
projection(loop,[loop],[a,u,a,c,a,a,a,c]- [])
   <= scfg(loop,loop,[a,u,a,c,a,a,a,c]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[a,u,a,c,a,a,a,c]- [])
   <= projection(loop,[a,loop],[a,u,a,c,a,a,a,c]- []) & msw(transition(loop,loop),[a,loop])
projection(loop,[a,loop],[a,u,a,c,a,a,a,c]- [])
   <= scfg(loop,a,[a,u,a,c,a,a,a,c]-[u,a,c,a,a,a,c]) & projection(loop,[loop],[u,a,c,a,a,a,c]- [])
scfg(loop,a,[a,u,a,c,a,a,a,c]-[u,a,c,a,a,a,c])
projection(loop,[loop],[u,a,c,a,a,a,c]- [])
   <= scfg(loop,loop,[u,a,c,a,a,a,c]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[u,a,c,a,a,a,c]- [])
   <= projection(loop,[u,loop],[u,a,c,a,a,a,c]- []) & msw(transition(loop,loop),[u,loop])
projection(loop,[u,loop],[u,a,c,a,a,a,c]- [])
   <= scfg(loop,u,[u,a,c,a,a,a,c]-[a,c,a,a,a,c]) & projection(loop,[loop],[a,c,a,a,a,c]- [])
scfg(loop,u,[u,a,c,a,a,a,c]-[a,c,a,a,a,c])
projection(loop,[loop],[a,c,a,a,a,c]- [])
   <= scfg(loop,loop,[a,c,a,a,a,c]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[a,c,a,a,a,c]- [])
   <= projection(loop,[a,loop],[a,c,a,a,a,c]- []) & msw(transition(loop,loop),[a,loop])
projection(loop,[a,loop],[a,c,a,a,a,c]- [])
   <= scfg(loop,a,[a,c,a,a,a,c]-[c,a,a,a,c]) & projection(loop,[loop],[c,a,a,a,c]- [])
scfg(loop,a,[a,c,a,a,a,c]-[c,a,a,a,c])
projection(loop,[loop],[c,a,a,a,c]- [])
   <= scfg(loop,loop,[c,a,a,a,c]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[c,a,a,a,c]- [])
   <= projection(loop,[c,loop],[c,a,a,a,c]- []) & msw(transition(loop,loop),[c,loop])
projection(loop,[c,loop],[c,a,a,a,c]- [])
   <= scfg(loop,c,[c,a,a,a,c]-[a,a,a,c]) & projection(loop,[loop],[a,a,a,c]- [])
scfg(loop,c,[c,a,a,a,c]-[a,a,a,c])
projection(loop,[loop],[a,a,a,c]- [])
   <= scfg(loop,loop,[a,a,a,c]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[a,a,a,c]- [])
   <= projection(loop,[a,loop],[a,a,a,c]- []) & msw(transition(loop,loop),[a,loop])
projection(loop,[a,loop],[a,a,a,c]- [])
   <= scfg(loop,a,[a,a,a,c]-[a,a,c]) & projection(loop,[loop],[a,a,c]- [])
scfg(loop,a,[a,a,a,c]-[a,a,c])
projection(loop,[loop],[a,a,c]- [])
   <= scfg(loop,loop,[a,a,c]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[a,a,c]- [])
   <= projection(loop,[a,loop],[a,a,c]- []) & msw(transition(loop,loop),[a,loop])
projection(loop,[a,loop],[a,a,c]- [])
   <= scfg(loop,a,[a,a,c]-[a,c]) & projection(loop,[loop],[a,c]- [])
scfg(loop,a,[a,a,c]-[a,c])
projection(loop,[loop],[a,c]- [])
   <= scfg(loop,loop,[a,c]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[a,c]- [])
   <= projection(loop,[a,loop],[a,c]- []) & msw(transition(loop,loop),[a,loop])
projection(loop,[a,loop],[a,c]- [])
   <= scfg(loop,a,[a,c]-[c]) & projection(loop,[loop],[c]- [])
scfg(loop,a,[a,c]-[c])
projection(loop,[loop],[c]- [])
   <= scfg(loop,loop,[c]- []) & projection(loop,[],[] - [])
scfg(loop,loop,[c]- [])
   <= projection(loop,[c],[c]- []) & msw(transition(loop,loop),[c])
projection(loop,[c],[c]- [])
   <= scfg(loop,c,[c]- []) & projection(loop,[],[] - [])
scfg(loop,c,[c]- [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(loop,[],[] - [])
projection(stem,[],[] - [])
projection(free,[],[] - [])

Viterbi_P = 0.000000002256236
